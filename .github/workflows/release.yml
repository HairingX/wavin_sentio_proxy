# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Release

on:
  release:
    types: [published]

env:
  COMPONENT_DIR: wavin_sentio_proxy

jobs:
  release-build:
    name: Create release
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Update version to ${{ github.event.release.tag_name }}
        run: |
          python3 ${{ github.workspace }}/.github/scripts/update__version__.py --version ${{ github.event.release.tag_name }} --file /src/wavin_sentio_proxy/__init__.py
      - name: Commit version update
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add ./src/wavin_sentio_proxy/__init__.py
          git commit -m "Updated version to ${{ github.event.release.tag_name }}"
          git push origin HEAD:main
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Python build release distributions
        run: |
          # NOTE: put your own distribution build steps here.
          python -m pip install build
          python -m build

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  pypi-publish:
    name: Publish release to PyPI
    runs-on: ubuntu-latest
    needs:
      - release-build

    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write

    # Dedicated environments with protections for publishing are strongly recommended.
    environment:
      name: pypi
      # OPTIONAL: uncomment and update to include your PyPI project URL in the deployment status:
      # url: https://pypi.org/p/YOURPROJECT

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
